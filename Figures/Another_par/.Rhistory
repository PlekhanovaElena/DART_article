hjust = -3.6, vjust   = -16.5, show.legend = FALSE, size = 4.5, alpha = 0.6) +
geom_text(data  = ann_text_6[ann_text_6$species == "6",], mapping = aes(x = -Inf, y = -Inf, label = abs_mean, col = species),
hjust = -3.6, vjust   = -14.5, show.legend = FALSE, size = 4.5) +
ylab("FAPAR")  + theme_bw() + xlab("height, m") +
scale_color_brewer(palette="Spectral", guide =
guide_legend(title = "PFT richness", nrow = 1)) +
coord_flip() +
facet_grid( ~scenetype) +
theme(panel.grid.major = element_line(colour = "lightgrey"), panel.grid.minor = element_blank(),
plot.title = element_text(size=16, hjust = 0.5),
axis.title.x = element_text(size=16), axis.text.x  = element_text(size=12),
axis.title.y = element_text(size=16), axis.text.y  = element_text(size=12),
strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14),
legend.text = element_text(size=12), legend.title = element_text(size=14), title = element_text(size=16))  +
theme(legend.position="right", legend.box = "vertical", legend.direction = "vertical", strip.background = element_rect(fill="white")) + guides(col=guide_legend(ncol=1, title = "LAI"))
ggplot(data = crown[crown$num_of_species %in% c(1,6),],
aes(x = height_m, y = abs_mean)) +
#geom_line(aes(group = )) +
stat_summary(data = crown[crown$num_of_species == 1,],
aes(x = height_m, y = abs_mean, col = species,
group = interaction(species, num_of_species)), alpha = 0.45, fun = 'mean',
geom = 'line', size = 1.1) +
stat_summary(data = crown[crown$num_of_species == 6,],
aes(x = height_m, y = abs_mean, col = species,
group = interaction(species, num_of_species)), fun = 'mean',
geom = 'line', size = 1) +
scale_y_continuous(breaks = seq(0,0.35,0.1)) +
#geom_text(data = ann_text,label = as.character(ann_text$label), show.legend = FALSE) +
geom_text(data  = ann_text_1[ann_text_1$species == "1",], mapping = aes(x = -Inf, y = -Inf, label = abs_mean, col = species),
hjust = -2.5, vjust   = -20.75, show.legend = FALSE, size = 4.5, alpha = 0.6) +
geom_text(data  = ann_text_6[ann_text_6$species == "1",], mapping = aes(x = -Inf, y = -Inf, label = abs_mean, col = species),
hjust = -2.5, vjust   = -18.75, show.legend = FALSE, size = 4.5) +
geom_text(data  = ann_text_1[ann_text_1$species == "6",], mapping = aes(x = -Inf, y = -Inf, label = abs_mean, col = species),
hjust = -3.6, vjust   = -16.5, show.legend = FALSE, size = 4.5, alpha = 0.6) +
geom_text(data  = ann_text_6[ann_text_6$species == "6",], mapping = aes(x = -Inf, y = -Inf, label = abs_mean, col = species),
hjust = -3.6, vjust   = -14.5, show.legend = FALSE, size = 4.5) +
ylab("FAPAR")  + theme_bw() + xlab("height, m") +
scale_color_brewer(palette="Spectral", guide =
guide_legend(title = "PFT richness", nrow = 1)) +
coord_flip() +
facet_grid( ~scenetype) +
theme(panel.grid.major = element_line(colour = "lightgrey"), panel.grid.minor = element_blank(),
plot.title = element_text(size=16, hjust = 0.5),
axis.title.x = element_text(size=16), axis.text.x  = element_text(size=12),
axis.title.y = element_text(size=16), axis.text.y  = element_text(size=12),
strip.text.x = element_text(size = 14), strip.text.y = element_text(size = 14),
legend.text = element_text(size=12), legend.title = element_text(size=14), title = element_text(size=16))  +
theme(legend.position="right", legend.box = "vertical", legend.direction = "vertical", strip.background = element_rect(fill="white")) + guides(col=guide_legend(ncol=1, title = "LAI"))
library(ggplot2)
library(gridExtra)
library(viridis)
library(plotly)
#path_lai = "./Data_for_figures/profiles_lai6_90.csv"
#path_lad = "./Data_for_figures/profiles_lad6_90.csv"
path_lai = "../Data_for_figures/50nm/another_param/profiles_exp1_lai_90.csv"
path_lad = "../Data_for_figures/50nm/another_param/profiles_exp1_lad_90.csv"
path_lop = "../Data_for_figures/50nm/another_param/profiles_exp1_lop6_90.csv"
path_lai_30 = "../Data_for_figures/50nm/another_param/profiles_exp1_lai_30.csv"
path_lad_30 = "../Data_for_figures/50nm/another_param/profiles_exp1_lad_30.csv"
path_lop_30 = "../Data_for_figures/50nm/another_param/profiles_exp1_lop6_30.csv"
path_lai_ov = "../Data_for_figures/50nm/another_param/profiles_exp1_lai_ov.csv"
path_lad_ov = "../Data_for_figures/50nm/another_param/profiles_exp1_lad_ov.csv"
path_lop_ov = "../Data_for_figures/50nm/another_param/profiles_exp1_lop6_ov.csv"
solar_path = "../Data_for_figures/Solar_irradiance.csv"
Ncomb = 63
Nscenes = 3
Nspecies = 6
#WAVE_RANGE = "VIS"
read_data = function(path, scenetype_var = 1) {
dat = read.csv(path)
cumsumm = cumsum(unlist(sapply(c(1:Nspecies), function(x) choose(Nspecies, x))))
the_list_of_comb = sapply(c(1:Nspecies), function(k) sapply(c(1:choose(Nspecies, k)), function(i) combn(Nspecies, k)[,i]))
the_list_of_sp = unlist(sapply(c(2:Nspecies), function(j) { x = the_list_of_comb[[j]]
res = split(x, rep(1:ncol(x), each = nrow(x)))
return(res)}), recursive = FALSE)
dat$num_of_species = as.factor(dat$num_of_species)
dat$species = as.factor(dat$species)
subdat = dat[dat$scenetype == scenetype_var,]
subdat_crown = as.data.frame(subdat[subdat$height_m != 1,])
return(subdat_crown)
}
read_solar_irradiance = function(sol_path = solar_path, bands = "all") {
srad = read.csv(sol_path)
srad = srad[srad$wavelength < 3,c(2:3)]
srad$wavelength = round(srad$wavelength, 3)
## Pick only the irradiance between 400 and 2500 nm at 50nm range
srad = srad[unlist(sapply(c(8:50)/20, function(i) which(abs(srad$wavelength-i)==min(abs(srad$wavelength-i))))),]
srad = aggregate(srad, by = list(srad$wavelength), FUN = "mean")[,c(2:3)]
if (bands == "VIS") {
srad$irradiance = srad$irradiance/sum(srad$irradiance[1:7])
srad$irradiance[8:43] = 0
} else srad$irradiance = srad$irradiance/sum(srad$irradiance)
return(srad$irradiance)
}
read_and_agg_data = function(path, scenetype_var = 1) {
subdat_crown = read_data(path, scenetype_var)
aggdat = aggregate(albedo ~ pos + num_of_species + band, data = subdat_crown, FUN = "mean")
## ScalingVIS and NIR ranges
solar_irradiance = read_solar_irradiance()
aggdat$albedo = (aggdat$albedo)*solar_irradiance[aggdat$band]
aggdat = aggregate(albedo ~ pos + num_of_species, data = aggdat, FUN = "sum")
cumsumm = cumsum(unlist(sapply(c(1:Nspecies), function(x) choose(Nspecies, x))))
diffs = lapply(c(2:Nspecies), function(k) sapply(c(1:choose(Nspecies, k)), function(i) {
mix = aggdat$albedo[i+cumsumm[k-1]]
av_mon = sum(aggdat$albedo[combn(Nspecies, k)[,i]])/k
ratio = (mix - av_mon) / av_mon # calculating the gained radiation
perc_ratio = ratio * 100 # in percent
return(perc_ratio)
}))
diffs = as.data.frame(cbind(unlist(diffs), aggdat$num_of_species[-c(1:6)]))
colnames(diffs) = c("differences", "num_of_species")
diffs$num_of_species = as.factor(diffs$num_of_species)
return(diffs)
}
agg_fapar_data = function(path, scenetype_var = 1) {
subdat_crown = read_data(path, scenetype_var)
aggdat = aggregate(albedo ~ pos + num_of_species + band, data = subdat_crown, FUN = "mean")
solar_irradiance = read_solar_irradiance(bands = "VIS")
aggdat$fapar = (aggdat$albedo)*solar_irradiance[aggdat$band]
aggdat = aggregate(fapar ~ pos + num_of_species, data = aggdat, FUN = "sum")
aggdat$fapar = 1 - aggdat$fapar
cumsumm = cumsum(unlist(sapply(c(1:Nspecies), function(x) choose(Nspecies, x))))
diffs = lapply(c(2:Nspecies), function(k) sapply(c(1:choose(Nspecies, k)), function(i) {
mix = aggdat$fapar[i+cumsumm[k-1]]
av_mon = sum(aggdat$fapar[combn(Nspecies, k)[,i]])/k
ratio = (mix - av_mon) / av_mon # calculating the gained radiation
perc_ratio = ratio * 100 # in percent
return(perc_ratio)
}))
diffs = as.data.frame(cbind(unlist(diffs), aggdat$num_of_species[-c(1:6)]))
colnames(diffs) = c("fapar_differences", "num_of_species")
#diffs$fapar_differences = - diffs$fapar_differences
return(diffs$fapar_differences)
}
background_dat = function(scenetype_var) {
# Different backgrounds
### LAI --------------------------------------------------------
lai = read_and_agg_data(path_lai, scenetype_var)
lai$illumination = "direct sun, 0? zenith angle"
lai$fapar_diffs = agg_fapar_data(path_lai, scenetype_var)
lai30 = read_and_agg_data(path_lai_30, scenetype_var)
lai30$illumination = "direct sun, 30? zenith angle"
lai30$fapar_diffs = agg_fapar_data(path_lai_30, scenetype_var)
lai_ov = read_and_agg_data(path_lai_ov, scenetype_var)
lai_ov$illumination = "overcasted"
lai_ov$fapar_diffs = agg_fapar_data(path_lai_ov, scenetype_var)
laiall = as.data.frame(rbind(lai, lai30, lai_ov))
laiall$trait = "LAI"
### LAD --------------------------------------------------------
lad = read_and_agg_data(path_lad, scenetype_var)
lad$illumination = "direct sun, 0? zenith angle"
lad$fapar_diffs = agg_fapar_data(path_lad, scenetype_var)
lad30 = read_and_agg_data(path_lad_30, scenetype_var)
lad30$illumination = "direct sun, 30? zenith angle"
lad30$fapar_diffs = agg_fapar_data(path_lad_30, scenetype_var)
lad_ov = read_and_agg_data(path_lad_ov, scenetype_var)
lad_ov$illumination = "overcasted"
lad_ov$fapar_diffs = agg_fapar_data(path_lad_ov, scenetype_var)
ladall = as.data.frame(rbind(lad, lad30, lad_ov))
ladall$trait = "LAD"
### LOP --------------------------------------------------------
lop = read_and_agg_data(path_lop, scenetype_var)
lop$illumination = "direct sun, 0? zenith angle"
lop$fapar_diffs = agg_fapar_data(path_lop, scenetype_var)
lop30 = read_and_agg_data(path_lop_30, scenetype_var)
lop30$illumination = "direct sun, 30? zenith angle"
lop30$fapar_diffs = agg_fapar_data(path_lop_30, scenetype_var)
lop_ov = read_and_agg_data(path_lop_ov, scenetype_var)
lop_ov$illumination = "overcasted"
lop_ov$fapar_diffs = agg_fapar_data(path_lop_ov, scenetype_var)
lopall = as.data.frame(rbind(lop, lop30, lop_ov))
lopall$trait = "LOP"
### Combining all the data --------------------------------------
output = as.data.frame(rbind(laiall, ladall, lopall))
output$background = scenetype_var
return(output)
}
myprettyoptions = theme(panel.grid.major = element_line(colour = "lightgrey"), panel.grid.minor.y = element_blank(),
plot.title = element_text(size=12, hjust = 0.5),
axis.title.x = element_text(size=12), axis.text.x  = element_text(size=10),
axis.title.y = element_text(size=12), axis.text.y  = element_text(size=10),
strip.text.x = element_text(size = 10), strip.text.y = element_text(size = 12),
legend.text = element_text(size=10), legend.title = element_text(size=10), title = element_text(size=10))
dat = as.data.frame(rbind(background_dat(1), background_dat(2), background_dat(3)))
dat$background = as.factor(dat$background)
levels(dat$background) = c("white", "black", "natural")
write.csv(dat, "../Data_for_figures/50nm/another_param/lai_lad_lop.csv", row.names = F)
dat = read.csv("../Data_for_figures/50nm/another_param/lai_lad_lop.csv")
dat$num_of_species = as.factor(dat$num_of_species)
head(dat$trait)
dat$trait <- factor(dat$trait, levels = c("LAI", "LAD", "LOP"))
head(dat$trait)
aggregate(differences ~trait, data = dat, FUN = mean)
summary(subset(dat, background == "natural" & illumination == "direct sun, 0? zenith angle" & trait == "LOP" & num_of_species == 4, select = c("fapar_diffs")))
library(RColorBrewer)
my_green = brewer.pal(7,"Greens")[6]
my_orange = brewer.pal(7,"Oranges")[6]
my_purple = brewer.pal(7,"Purples")[6]
my_palette = c(my_green, my_orange, my_purple)
plot_albedo = ggplot(subset(dat, background == "natural" & illumination == "direct sun, 0? zenith angle"),
aes(x = num_of_species, y = differences, col = trait, fill = trait)) +
geom_boxplot(width=0.7, alpha = 0.3, size = 0.65) +
geom_hline(yintercept = 0) +
xlab("PFT richness") + ylab("albedo change (%)") + theme_bw() +
scale_color_manual(values=my_palette) +
scale_fill_manual(values=my_palette) +
myprettyoptions + theme(legend.position = "none")
plot_albedo
plot_fapar = ggplot(subset(dat, background == "natural" & illumination == "direct sun, 0? zenith angle"),
aes(x = num_of_species, y = fapar_diffs, col = trait, fill = trait)) +
geom_boxplot(width=0.7, alpha = 0.3, size = 0.65) +
geom_hline(yintercept = 0) +
xlab("PFT richness") + ylab("FAPAR change (%)") + theme_bw() +
scale_color_manual(values=my_palette) +
scale_fill_manual(values=my_palette) +
myprettyoptions + theme(legend.position = "none")
plot_fapar
summary(subset(dat, background == "natural" & illumination == "direct sun, 0? zenith angle  " & trait == "LOP"))
library(grid)
library(gridExtra)
myplot1 <- arrangeGrob(plot_albedo, top = textGrob("a", x = unit(0, "npc")
, y   = unit(0, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=14, fontfamily="Areal")))
myplot2 <- arrangeGrob(plot_fapar, top = textGrob("b", x = unit(0, "npc")
, y = unit(0, "npc"), just=c("left","top"),
gp=gpar(col="black", fontsize=14, fontfamily="Areal")))
grid.arrange(myplot1, myplot2, ncol = 2)
levels(dat$trait)
ggplot(subset(dat, background == "natural" & illumination == "direct sun, 0? zenith angle"),
aes(x = num_of_species, y = fapar_diffs, col = trait, fill = trait)) +
geom_boxplot(width=0.3, alpha = 0.3, size = 0.7) +
geom_hline(yintercept = 0) +
xlab("PFT richness") + ylab("FAPAR change (%)") + theme_bw() +
scale_color_manual(values=my_palette, labels = levels(dat$trait)) +
scale_fill_manual(values=my_palette, labels = levels(dat$trait)) +
myprettyoptions + theme(legend.position = "bottom")
summary(dat$differences[dat$trait == "LOP" & dat$num_of_species == 2])
myprettyoptions_blankx = theme(panel.grid.major = element_line(colour = "grey"),panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
plot.title = element_text(size=12, hjust = 0.5),
axis.title.x = element_text(size=12), axis.text.x  = element_text(size=10),
axis.title.y = element_text(size=12), axis.text.y  = element_text(size=10),
strip.text.x = element_text(size = 11), strip.text.y = element_text(size = 11),
legend.text = element_text(size=11), legend.title = element_text(size=11), title = element_text(size=10))
dat$illumination = as.factor(dat$illumination)
levels(dat$illumination) =c("direct sun, 0° zenith angle", "direct sun, 30° zenith angle",  "overcasted")
dat$background = factor(dat$background, levels=c("natural","white","black"))
ggplot(dat, aes(x = num_of_species, y = differences, col = trait, fill = trait)) +
geom_boxplot(width=0.6, alpha = 0.3, size = 0.7) +
geom_hline(yintercept = 0) +
xlab("PFT richness") + ylab("albedo change (%)") + theme_bw() +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_grid(background~illumination, scales = "free") +
scale_y_continuous(breaks = scales::pretty_breaks(3)) +
theme(legend.position="bottom") +
myprettyoptions_blankx
ggplot(dat, aes(x = num_of_species, y = fapar_diffs, col = trait, fill = trait)) +
geom_boxplot(width=0.5, alpha = 0.3, size = 0.7) +
geom_hline(yintercept = 0) +
xlab("PFT richness") + ylab("FAPAR change (%)") + theme_bw() +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_grid(background~illumination, scales = "free") +
scale_y_continuous(breaks = scales::pretty_breaks(3)) +
theme(legend.position="bottom") +
myprettyoptions_blankx
myprettyoptions_blankx = theme(panel.grid.major = element_line(colour = "grey"),panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(),
plot.title = element_text(size=12, hjust = 0.5),
axis.title.x = element_text(size=12), axis.text.x  = element_text(size=10),
axis.title.y = element_text(size=12), axis.text.y  = element_text(size=10),
strip.text.x = element_text(size = 11), strip.text.y = element_text(size = 11),
legend.text = element_text(size=11), legend.title = element_text(size=11), title = element_text(size=10))
dat$illumination = as.factor(dat$illumination)
levels(dat$illumination) =c("direct sun, 0° zenith angle", "direct sun, 30° zenith angle",  "overcasted")
dat$background = factor(dat$background, levels=c('natural','white','black'))
ggplot(dat[(dat$illumination == "direct sun, 0° zenith angle") & (dat$trait == "lai"),],
aes(x = num_of_species, y = differences, col = trait, fill = trait)) +
geom_boxplot(width=0.5, alpha = 0.3, size = 0.7) +
geom_hline(yintercept = 0) +
xlab("PFT richness") + ylab("albedo change (%)") + theme_bw() +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
facet_grid(background~illumination, scales = "free") +
scale_y_continuous(breaks = scales::pretty_breaks(3)) +
theme(legend.position="bottom") +
myprettyoptions_blankx
library(ggplot2)
library(gridExtra)
library(gplots)
library(RColorBrewer)
library(cowplot)
#dat = read.csv("Data_for_figures/profiles_exp2_2d.csv")
dat = read.csv("Data_for_figures/50nm/profiles.csv")
Ncomb = 63
Nscenes = 3
Nspecies = 16
WAVE_RANGE = "VIS"
read_solar_irradiance = function(sol_path = solar_path, bands = "all") {
srad = read.csv(sol_path)
srad = srad[srad$wavelength < 3,c(2:3)]
srad$wavelength = round(srad$wavelength, 3)
## Pick only the irradiance between 400 and 2500 nm at 50nm range
srad = srad[unlist(sapply(c(8:50)/20, function(i) which(abs(srad$wavelength-i)==min(abs(srad$wavelength-i))))),]
srad = aggregate(srad, by = list(srad$wavelength), FUN = "mean")[,c(2:3)]
if (bands == "VIS") {
srad$irradiance = srad$irradiance/sum(srad$irradiance[1:7])
srad$irradiance[8:43] = 0
} else srad$irradiance = srad$irradiance/sum(srad$irradiance)
return(srad$irradiance)
}
solar_path = "./Data_for_figures/Solar_irradiance.csv"
solar_irradiance = read_solar_irradiance(bands = "VIS")
summary(dat)
dat$albedo = (dat$albedo)*solar_irradiance[dat$band]
dat = aggregate(albedo ~ height_m + num_of_sp1 + num_of_sp2 + pos + random_seed + scenetype + species + abs_mean + abs_sd + num_of_species, data = dat, FUN = "sum")
summary(dat)
head(dat)
aggregate(x$Frequency, by=list(colnames(dat)), FUN=sum)
dat$num_of_species = as.factor(dat$num_of_species)
dat$lad = floor(dat$species/4)
dat$lad = as.factor(dat$lad)
levels(dat$lad) = c("Spherical", "Uniform", "Vertical", "Horizontal")
dat$lop = dat$species %% 4
dat$lop = as.factor(dat$lop)
levels(dat$lop) = c("beech", "elm", "aspen", "pine")
colnames(dat)[colnames(dat) == "num_of_sp1"] = "diversity_LAD"
colnames(dat)[colnames(dat) == "num_of_sp2"] = "diversity_LOP"
dat$species = as.factor(dat$species)
#levels(dat$species) = c("Spherical", "Uniform", "Vertical", "Horizontal", "Ellipsoidal", "Extremophile")
#levels(dat$species) = c("3m", "5m", "7m", "9m", "11m", "13m")
#levels(dat$species) = c("beech", "dec", "elm", "euc", "aspen", "pine")
library(dplyr)
subdat = dat[dat$scenetype == 1
& dat$random_seed == 1 & dat$height_m != 1,]
#black_albedo = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "albedo"]
#subdat$albedo = subdat$albedo - black_albedo
#black_abs = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "abs_mean"]
#subdat$abs_mean = subdat$abs_mean - black_abs
subdat_crown = subdat[subdat$height_m != 1,]
my_palette = brewer.pal(9, "YlGn")[9:1]
vector_a = subdat$diversity_LAD
vector_b = subdat$diversity_LOP
albmat = sapply(unique(vector_a), function (a)
sapply(unique(vector_b), function(b)
mean( subdat$albedo[vector_a == a & vector_b== b])))
heatmap.2(t(albmat),margins=c(7,10), scale="none", labCol = unique(vector_b),
labRow = unique(vector_a),
dendrogram="none",  trace="none", xlab = "Diversity of LOP",
ylab = "Diversity of LAD", main = "Albedo", density.info="none", Colv = NA, Rowv = NA,
col=my_palette)
heatmap.2(t(albmat),margins=c(7,10), scale="none", labCol = unique(vector_b),
labRow = unique(vector_a),
dendrogram="none",  trace="none", xlab = "Diversity of LAI",
ylab = "Diversity of LAD", main = "Albedo", density.info="none", Colv = NA, Rowv = NA,
col=my_palette)
dat$num_of_species = as.factor(dat$num_of_species)
dat$lad = floor(dat$species/4)
dat$lad = as.factor(dat$lad)
levels(dat$lad) = c("Spherical", "Uniform", "Vertical", "Horizontal")
dat$lop = dat$species %% 4
dat$lop = as.factor(dat$lop)
levels(dat$lop) = c("beech", "elm", "aspen", "pine")
colnames(dat)[colnames(dat) == "num_of_sp1"] = "diversity_LAD"
colnames(dat)[colnames(dat) == "num_of_sp2"] = "diversity_LOP"
dat$species = as.factor(dat$species)
#levels(dat$species) = c("Spherical", "Uniform", "Vertical", "Horizontal", "Ellipsoidal", "Extremophile")
#levels(dat$species) = c("3m", "5m", "7m", "9m", "11m", "13m")
#levels(dat$species) = c("beech", "dec", "elm", "euc", "aspen", "pine")
library(dplyr)
subdat = dat[dat$scenetype == 1
& dat$random_seed == 1 & dat$height_m != 1,]
#black_albedo = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "albedo"]
#subdat$albedo = subdat$albedo - black_albedo
#black_abs = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "abs_mean"]
#subdat$abs_mean = subdat$abs_mean - black_abs
library(ggplot2)
library(gridExtra)
library(gplots)
library(RColorBrewer)
library(cowplot)
#dat = read.csv("Data_for_figures/profiles_exp2_2d.csv")
dat = read.csv("Data_for_figures/50nm/profiles.csv")
Ncomb = 63
Nscenes = 3
Nspecies = 16
WAVE_RANGE = "VIS"
read_solar_irradiance = function(sol_path = solar_path, bands = "all") {
srad = read.csv(sol_path)
srad = srad[srad$wavelength < 3,c(2:3)]
srad$wavelength = round(srad$wavelength, 3)
## Pick only the irradiance between 400 and 2500 nm at 50nm range
srad = srad[unlist(sapply(c(8:50)/20, function(i) which(abs(srad$wavelength-i)==min(abs(srad$wavelength-i))))),]
srad = aggregate(srad, by = list(srad$wavelength), FUN = "mean")[,c(2:3)]
if (bands == "VIS") {
srad$irradiance = srad$irradiance/sum(srad$irradiance[1:7])
srad$irradiance[8:43] = 0
} else srad$irradiance = srad$irradiance/sum(srad$irradiance)
return(srad$irradiance)
}
solar_path = "./Data_for_figures/Solar_irradiance.csv"
solar_irradiance = read_solar_irradiance(bands = "all")
dat$albedo = (dat$albedo)*solar_irradiance[dat$band]
dat = aggregate(albedo ~ height_m + num_of_sp1 + num_of_sp2 + pos + random_seed + scenetype + species + abs_mean + abs_sd + num_of_species, data = dat, FUN = "sum")
head(dat)
dat$num_of_species = as.factor(dat$num_of_species)
dat$lad = floor(dat$species/4)
dat$lad = as.factor(dat$lad)
levels(dat$lad) = c("Spherical", "Uniform", "Vertical", "Horizontal")
dat$lop = dat$species %% 4
dat$lop = as.factor(dat$lop)
levels(dat$lop) = c("beech", "elm", "aspen", "pine")
colnames(dat)[colnames(dat) == "num_of_sp1"] = "diversity_LAD"
colnames(dat)[colnames(dat) == "num_of_sp2"] = "diversity_LOP"
dat$species = as.factor(dat$species)
#levels(dat$species) = c("Spherical", "Uniform", "Vertical", "Horizontal", "Ellipsoidal", "Extremophile")
#levels(dat$species) = c("3m", "5m", "7m", "9m", "11m", "13m")
#levels(dat$species) = c("beech", "dec", "elm", "euc", "aspen", "pine")
library(dplyr)
subdat = dat[dat$scenetype == 1
& dat$random_seed == 1 & dat$height_m != 1,]
#black_albedo = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "albedo"]
#subdat$albedo = subdat$albedo - black_albedo
#black_abs = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "abs_mean"]
#subdat$abs_mean = subdat$abs_mean - black_abs
subdat_crown = subdat[subdat$height_m != 1,]
my_palette = brewer.pal(9, "YlGn")[9:1]
vector_a = subdat$diversity_LAD
vector_b = subdat$diversity_LOP
albmat = sapply(unique(vector_a), function (a)
sapply(unique(vector_b), function(b)
mean( subdat$albedo[vector_a == a & vector_b== b])))
heatmap.2(t(albmat),margins=c(7,10), scale="none", labCol = unique(vector_b),
labRow = unique(vector_a),
dendrogram="none",  trace="none", xlab = "Diversity of LAI",
ylab = "Diversity of LAD", main = "Albedo", density.info="none", Colv = NA, Rowv = NA,
col=my_palette)
library(ggplot2)
library(gridExtra)
library(gplots)
library(RColorBrewer)
library(cowplot)
#dat = read.csv("Data_for_figures/profiles_exp2_2d.csv")
dat = read.csv("Data_for_figures/50nm/profiles.csv")
Ncomb = 63
Nscenes = 3
Nspecies = 16
WAVE_RANGE = "VIS"
read_solar_irradiance = function(sol_path = solar_path, bands = "all") {
srad = read.csv(sol_path)
srad = srad[srad$wavelength < 3,c(2:3)]
srad$wavelength = round(srad$wavelength, 3)
## Pick only the irradiance between 400 and 2500 nm at 50nm range
srad = srad[unlist(sapply(c(8:50)/20, function(i) which(abs(srad$wavelength-i)==min(abs(srad$wavelength-i))))),]
srad = aggregate(srad, by = list(srad$wavelength), FUN = "mean")[,c(2:3)]
if (bands == "VIS") {
srad$irradiance = srad$irradiance/sum(srad$irradiance[1:7])
srad$irradiance[8:43] = 0
} else srad$irradiance = srad$irradiance/sum(srad$irradiance)
return(srad$irradiance)
}
solar_path = "./Data_for_figures/Solar_irradiance.csv"
solar_irradiance = read_solar_irradiance(bands = "all")
dat$albedo = (dat$albedo)*solar_irradiance[dat$band]
dat = aggregate(albedo ~ height_m + num_of_sp1 + num_of_sp2 + random_seed + scenetype + species + abs_mean + abs_sd + num_of_species, data = dat, FUN = "sum")
head(dat)
subdat = dat[dat$scenetype == 1
& dat$random_seed == 1 & dat$height_m != 1,]
dat$albedo = (dat$albedo)*solar_irradiance[dat$band]
subdat = aggregate(albedo ~ num_of_sp1 + num_of_sp2 + species + num_of_species, data = subdat, FUN = "mean")
dat = subdat
dat$num_of_species = as.factor(dat$num_of_species)
dat$lad = floor(dat$species/4)
dat$lad = as.factor(dat$lad)
levels(dat$lad) = c("Spherical", "Uniform", "Vertical", "Horizontal")
dat$lop = dat$species %% 4
dat$lop = as.factor(dat$lop)
levels(dat$lop) = c("beech", "elm", "aspen", "pine")
colnames(dat)[colnames(dat) == "num_of_sp1"] = "diversity_LAD"
colnames(dat)[colnames(dat) == "num_of_sp2"] = "diversity_LOP"
dat$species = as.factor(dat$species)
#levels(dat$species) = c("Spherical", "Uniform", "Vertical", "Horizontal", "Ellipsoidal", "Extremophile")
#levels(dat$species) = c("3m", "5m", "7m", "9m", "11m", "13m")
#levels(dat$species) = c("beech", "dec", "elm", "euc", "aspen", "pine")
library(dplyr)
#black_albedo = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "albedo"]
#subdat$albedo = subdat$albedo - black_albedo
#black_abs = dat[dat$band == WAVE_RANGE &  dat$scenetype == 2 & dat$height_m != 1 & dat$random_seed == 0, "abs_mean"]
#subdat$abs_mean = subdat$abs_mean - black_abs
my_palette = brewer.pal(9, "YlGn")[9:1]
vector_a = subdat$diversity_LAD
vector_b = subdat$diversity_LOP
albmat = sapply(unique(vector_a), function (a)
sapply(unique(vector_b), function(b)
mean( subdat$albedo[vector_a == a & vector_b== b])))
heatmap.2(t(albmat),margins=c(7,10), scale="none", labCol = unique(vector_b),
labRow = unique(vector_a),
dendrogram="none",  trace="none", xlab = "Diversity of LAI",
ylab = "Diversity of LAD", main = "Albedo", density.info="none", Colv = NA, Rowv = NA,
col=my_palette)
subdat = dat
my_palette = brewer.pal(9, "YlGn")[9:1]
vector_a = subdat$diversity_LAD
vector_b = subdat$diversity_LOP
albmat = sapply(unique(vector_a), function (a)
sapply(unique(vector_b), function(b)
mean( subdat$albedo[vector_a == a & vector_b== b])))
heatmap.2(t(albmat),margins=c(7,10), scale="none", labCol = unique(vector_b),
labRow = unique(vector_a),
dendrogram="none",  trace="none", xlab = "Diversity of LAI",
ylab = "Diversity of LAD", main = "Albedo", density.info="none", Colv = NA, Rowv = NA,
col=my_palette)
View(subdat)
